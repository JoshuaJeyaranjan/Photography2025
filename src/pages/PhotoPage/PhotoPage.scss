@use '../../styles/partials/mixins' as *;

.photo-page {
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    padding: 0; // Remove padding if it's not intentional
    margin: 0;
    text-align: center;

    @include tablet {
        padding: 2rem;
    }
  }
  
  .photo-page-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    max-width: 1200px;
    width: 100%;
    padding: 1rem 1rem;
    box-sizing: border-box;
  }
  
  .photo-detail {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    margin: 0;
  
    .photo-detail-image {
      display: block; // prevent inline image spacing
      width: 100%;
      height: auto;
      border-radius: 8px;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }
  
    .photo-info {
      max-width: 800px;
  
      h1 {
        margin: 0;
        font-size: 2em;
      }
  
      .photo-description {
        font-size: 1rem;
        line-height: 1.6;
        margin: 1rem 0;
      }
  
      .purchase-button {
        margin-top: 1rem;
        padding: 0.75rem 1.5rem;
        font-size: 1.1rem;
      }
  
      .purchase-status {
        margin-top: 0.75rem;
        font-style: italic;
      }
    }
  }
  
  .photo-page-status {
    text-align: center;
    padding: 2rem;
    font-size: 1.2rem;
  
    &.error {
      color: red;
    }
  }
  .cart-message {
    margin-top: 0.5rem;
    color: green;
    font-weight: 500;
    font-size: 1rem;
    animation: fadeIn 0.3s ease;
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(-4px); }
      to { opacity: 1; transform: translateY(0); }
    }
    
  }
  
  // You can add these styles to your existing PhotoPage.scss file.
// If .photo-page or .photo-metadata selectors already exist,
// integrate these button styles within that existing structure.

.purchase-button {
  display: inline-block; // Allows buttons to sit side-by-side if space allows, or stack naturally
  padding: 12px 24px;   // Comfortable padding inside the button
  margin: 10px;         // Spacing around each button
  font-size: 1rem;      // Standard font size
  font-weight: 600;     // Make text slightly bolder
  color: #ffffff;       // White text for contrast
  background-color: #3498db; // A pleasant, modern blue
  border: none;         // Remove default browser border
  border-radius: 6px;   // Softly rounded corners
  cursor: pointer;
  text-align: center;
  text-decoration: none; // In case it's ever an <a> tag styled as a button
  min-width: 160px;     // Ensures buttons have a decent minimum width
  transition: background-color 0.25s ease, transform 0.2s ease, box-shadow 0.25s ease; // Smooth transitions for hover effects

  &:hover {
    background-color: #2980b9; // Darker shade of blue on hover
    transform: translateY(-2px); // Subtle lift effect
    box-shadow: 0 6px 12px rgba(52, 152, 219, 0.3); // Soft shadow, tinted with button color for a subtle glow
  }

  &:active {
    background-color: #2471a3; // Even darker blue when button is pressed
    transform: translateY(0px);  // Reset lift, giving a "pressed down" feel
    box-shadow: 0 2px 4px rgba(52, 152, 219, 0.2); // Smaller shadow when active
  }

  // Modern accessibility-friendly focus state for keyboard navigation
  &:focus-visible {
    outline: 2px solid #2980b9; // Clear focus outline
    outline-offset: 2px;       // Offset outline slightly from button edge
    box-shadow: none;          // Optionally remove other shadows when focused with outline
  }
}

// Optional: Consistent styling for status messages
.purchase-status,
.cart-message {
  margin-top: 15px;
  font-size: 0.9em;
  text-align: center; // Center status messages if buttons are centered
  color: #555;       // Default color for status
}

.cart-message {
  color: #28a745;     // Green for success messages (e.g., "Added to cart!")
  font-weight: 500;
}
